// Declare our variablesvar baseURL:String = "http://localhost/drupalbook";var gateway:String = baseURL + "/services/amfphp"var sessionId:String = "";var nodeId:Number = /*root.loaderInfo.parameters.node*/3;// The current user.var user:Object = null;// Hide the welcome message.login.welcome.visible = false;// Add a listener when the user presses the Login button.login.submit.addEventListener( MouseEvent.CLICK, onLogin );// Declare our Drupal connectionvar drupal:NetConnection = new NetConnection();drupal.objectEncoding = ObjectEncoding.AMF3;// Connect to the Drupal gatewaydrupal.connect( gateway );// Set up our responder with the callbacks.var responder:Responder = new Responder( onConnect, onError);// Set up a user responder to handle Login and Logout commands.var userResponder:Responder = new Responder( setUser, onUserError );// Connect to Drupaldrupal.call("system.connect", responder);// Loads a Drupal node.function loadNode( nid:Number ){	// Set up our responder with the callbacks.	var nodeResponse:Responder = new Responder( onNodeLoad, onError);	// Call Drupal to get the node.	drupal.call( "node.get", nodeResponse, sessionId, nid );}// Called when Drupal returns with our node.function onNodeLoad( node:Object ){	// Print out the node title.	title.text = node.title;}// Called when Drupal returns with a successful connection.function onConnect( result:Object ){   // Set our current user.	setUser( result );		trace("We are connected!!!");	trace("Session Id: " + sessionId);			// Load our node.	loadNode( nodeId );	}// Used to set the current user.function setUser( result:Object ){	if( result is Boolean ) {		// Set our userId to 0		user.userid = 0;	}	else {		// Set our sessionId variable.		sessionId = result.sessid;						// Set the global variable.		user = result.user;	}		// Check to see if we are logged in.	if( user && user.userid > 0 ) {		// Welcome our user.		login.submit.label = "Logout";				login.welcome.visible = true;		login.welcome.username.text = user.name;		login.userpass.visible = false;			}	else {		// Show the login block.		login.submit.label = "Login";				login.welcome.visible = false;		login.userpass.visible = true;			}}// Called when an error occurs during login.function onUserError( error:Object ){	// Set the status to what happened.	login.status.text = error.description;}// Called when the user clicks the login button.function onLogin( event:MouseEvent ){	// Is the user logged out?	if( user && user.userid == 0 ) {			// Get the username and password.		var username:String = login.userpass.username.text;		var password:String = login.userpass.password.text;					// Replace unwanted characters.		username = username.replace(/[\t\n\r\f]/,'');		password = password.replace(/[\t\n\r\f]/,'');					// Check for the username and password		if( username.length && password.length ) {			drupal.call( "user.login", userResponder, sessionId, username, password );		}		else {			login.status.text = "username and password required.";		}	}	else {		// Log out of Drupal.		drupal.call( "user.logout", userResponder, sessionId );	}	}// Called when an error occurs connecting to Drupal.function onError( error:Object ){	for each (var item in error) {		trace(item);   }}