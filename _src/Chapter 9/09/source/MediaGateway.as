package {	// Import all necessary components.	import flash.external.ExternalInterface;	import flash.utils.Timer;	import flash.events.TimerEvent;		// Declare our class 	public class MediaGateway 	{		// Used to initialize the MediaGateway.		public static function initialize( _id:String, _connect:String, _onLoaded:Function )		{			// Setup our gateway variables.			id = _id;			connect = _connect;			onLoaded = _onLoaded;						// See if the ExternalInterface is available.			if ( connect && ExternalInterface.available ) {				ready = true;								// Register for all our JavaScript callbacks.				ExternalInterface.addCallback("playMedia", playMedia);									ExternalInterface.addCallback("pauseMedia", pauseMedia);				ExternalInterface.addCallback("playControl", playControl);									ExternalInterface.addCallback("pauseControl", pauseControl);				ExternalInterface.addCallback("allSystemsGo", allSystemsGo);								// Is our gateway ready.				if( ExternalInterface.call("isGatewayReady") ) {					// Register with the gateway					register();				}				else {					retries = 0;   				// Recheck every 100 ms.					readyTimer = new Timer( 100 );					readyTimer.addEventListener( TimerEvent.TIMER, checkGateway );					readyTimer.start();									}			}			else {				ready = false;				onLoaded();			}		}						// Function to register the "connect" Flash application.		private static function register() : void 		{   		// Register with the JavaScript Gateway.			ExternalInterface.call( "registerFlashObject", id );		}				// Function called from JavaScript when all systems are go!		public static function allSystemsGo()		{   		// Call our callback function to continue loading.			onLoaded();		}						// Function to check for the gateway at a given interval.		private static function checkGateway(event:TimerEvent):void		{   		// Is our gateway ready.   		if( ExternalInterface.call("isGatewayReady") && (retries++ < 5) ) {				// Register with the gateway				register();			}		}						// Add a static play function		public static function playMedia( external:Boolean = false )		{						// Check to see if an external call should be made.			if( external && connect && ready ) {				// Call the JavaScript playMedia function.				ExternalInterface.call( "playMedia", connect );			}			else {				// Play the media				mediaPlayer.playFile();			}		}				// Add a static pause function		public static function pauseMedia( external:Boolean = false )		{			// Check to see if an external call should be made.			if( external && connect && ready ) {				// Call the JavaScript pauseMedia function.				ExternalInterface.call( "pauseMedia", connect );			}			else {							// Pause the media				mediaPlayer.pause();			}		}		// Add a static control play function		public static function playControl( external:Boolean = false )		{					// Check to see if an external call should be made.			if( external && connect && ready ) {				// Call the JavaScript playControl function.				ExternalInterface.call( "playControl", connect );				}			else {						// Play the control				controlBar.playFile();			}		}				// Add a static control pause function		public static function pauseControl( external:Boolean = false )		{			// Check to see if an external call should be made.						if( external && connect && ready ) {				// Call the JavaScript pauseControl function.				ExternalInterface.call( "pauseControl", connect );					}			else {							// Pause the control				controlBar.pause();			}		}				// Declare our obect references.		public static var controlBar:ControlBar;		public static var mediaPlayer:MediaPlayer;					// Declare our private variables.		private static var id:String;		private static var connect:String;		private static var onLoaded:Function;				private static var ready:Boolean;		private static var retries:uint;		private static var readyTimer:Timer;				}}