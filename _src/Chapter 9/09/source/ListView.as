package {	// Import all dependencies	import flash.events.Event;	import flash.events.MouseEvent;		import flash.display.Sprite;	import flash.geom.Rectangle;			// Declare our class 	public class ListView extends Sprite	{		// The scroll speed of our list view.		private static const speed:Number = 10;				// The hysteresis of our scroll bar.		private static const hyst:Number = 15;						// Constructor function.  		// Called when someone creates a new ListView		public function ListView()		{					// Instanciate our variables.			lastRect = new Rectangle(0,0,0,0);					// Set up our events..			addEventListener( Event.ADDED_TO_STAGE, onAdded );			addEventListener( MouseEvent.MOUSE_OVER, onOver );			addEventListener( MouseEvent.MOUSE_OUT, onOut );					}				// Called when this object has been added to the stage.		private function onAdded( event:Event )		{				// Get the scroll mid point.			scrollMid = listMask.height / 2;					// Remove the default teaser.			list.removeChildAt( 0 );		}						// Called when the mouse moves over our list.		private function onOver( e:MouseEvent )		{			// Trigger on every frame event.  30 frames per sec.			addEventListener( Event.ENTER_FRAME, scrollEvent );		}				// Called when the mouse moves out of our list.		private function onOut( e:MouseEvent )		{					// Remove the trigger event.				removeEventListener( Event.ENTER_FRAME, scrollEvent );		}					// Scroll's our list region.		private function scrollEvent( e:Event ) : void		{								// Get our relative mouse position to the mid point.			var mousePos:Number = listMask.mouseY - scrollMid;					// See if our list height is greater than the mask.			var shouldScroll:Boolean = (list.height > listMask.height);						// See if we are not within our hysteresis region.			shouldScroll = shouldScroll && (Math.abs(mousePos) > hyst);						// If we should scroll.			if( shouldScroll ) {									// Find the delta.				var delta:int = speed * (mousePos / scrollMid);									// Set our list position.				list.y = list.y - delta;									// Make sure the list does not scroll down to far.				list.y = (list.y > 0) ? 0 : list.y;									// Make sure the list does not scroll up to far.				var bot:Number = -(list.height - listMask.height);				list.y = (list.y < bot) ? bot: list.y;			}		}						// Used to add an item to our list view.		public function addItem( item:* ) 		{			// Set the items position in the list.			item.y = lastRect.y = lastRect.y + lastRect.height;			item.x = lastRect.x;			lastRect.width = item.width;			lastRect.height = item.height;									// Add the item to the list.			list.addChild( item );		}				// Delcare our child movie clips.		public var list:Sprite;			public var listMask:Sprite;				// The previously added teasers rectangle region.		private var lastRect:Rectangle;				// The midpoint of the list mask.		private var scrollMid:Number;			}}